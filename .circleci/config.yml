version: 2
jobs: # we now have TWO jobs, so that a workflow can coordinate them!
  one: # This is our first job.
    docker: # it uses the docker executor
      - image: cimg/ruby:2.6.8 # specifically, a docker image with ruby 2.6.8
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    # Steps are a list of commands to run inside the docker container above.
    steps:
      - checkout # this pulls code down from GitHub
      - run: echo "A first hello" # This prints "A first hello" to stdout.
      - run: mkdir -p my_workspace
      - run: echo "Trying out workspace" > my_workspace/echo-output
      - persist_to_workspace:
          root: my_workspace
          paths:
            - echo-output
      - add_ssh_keys:
          fingerprints:
            - "MD5:98:75:89:6e:a5:d8:69:91:e9:16:ac:d9:cc:cf:43:73"
  two: # This is our second job.
    docker: # it runs inside a docker image, the same as above.
      - image: cimg/ruby:3.0.2
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - run: echo "A more familiar hi" # We run a similar echo command to above.
      - attach_workspace:
          at: my_workspace
      - run: |
          if [[ $(cat my_workspace/echo_output) == "Trying out workspace" ]]; then
            echo "It worked!";
          else
            echo "Nope!"; Exit 1;
          fi
# Under the workflows: map, we can coordinate our two jobs, defined above.
workflows:
  version: 2
  one_and_two: # this is the name of our workflow
    jobs: # and here we list the jobs we are going to run.
      - one
      - two:
          requires:
            - one
